var $jscomp={scope:{}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){if(c.get||c.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.SYMBOL_PREFIX="jscomp_symbol_";
$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};$jscomp.symbolCounter_=0;$jscomp.Symbol=function(a){return $jscomp.SYMBOL_PREFIX+(a||"")+$jscomp.symbolCounter_++};
$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var a=$jscomp.global.Symbol.iterator;a||(a=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator"));"function"!=typeof Array.prototype[a]&&$jscomp.defineProperty(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return $jscomp.arrayIterator(this)}});$jscomp.initSymbolIterator=function(){}};$jscomp.arrayIterator=function(a){var b=0;return $jscomp.iteratorPrototype(function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}})};
$jscomp.iteratorPrototype=function(a){$jscomp.initSymbolIterator();a={next:a};a[$jscomp.global.Symbol.iterator]=function(){return this};return a};$jscomp.makeIterator=function(a){$jscomp.initSymbolIterator();$jscomp.initSymbol();$jscomp.initSymbolIterator();var b=a[Symbol.iterator];return b?b.call(a):$jscomp.arrayIterator(a)};var $jscomp$this=this;
(function(a,b){"undefined"!=typeof module?module.exports=b():"function"==typeof define&&"object"==typeof define.amd?define(b):$jscomp$this[a]=b()})("streamSaver",function(){var a,b,c="https:"==location.protocol||"localhost"==location.hostname,f={createWriteStream:function(h,d,g){Number.isFinite(d)&&(d=$jscomp.makeIterator([d,g]),g=d.next().value,d=d.next().value);var e=new MessageChannel,k,n=function(){return new Promise(function(d,n){e.port1.onmessage=function(a){if(a.data.download){d();c||k.close();
var b=document.createElement("a"),e=new MouseEvent("click");b.href=a.data.download;b.dispatchEvent(e)}};c&&!a&&(a=document.createElement("iframe"),a.src=f.mitm,a.hidden=!0,document.body.appendChild(a));if(c&&!b){var l;a.addEventListener("load",l=function(c){b=!0;a.removeEventListener("load",l);a.contentWindow.postMessage({filename:h,size:g},"*",[e.port2])})}c&&b&&a.contentWindow.postMessage({filename:h,size:g},"*",[e.port2]);if(!c){k=window.open(f.mitm,Math.random());var m=function(a){a.source===
k&&(k.postMessage({filename:h,size:g},"*",[e.port2]),removeEventListener("message",m))};addEventListener("message",m)}})};return new WritableStream({start:function(a){return n()},write:function(a){e.port1.postMessage(a)},close:function(){e.port1.postMessage("end");console.log("All data successfully read!")},abort:function(a){e.port1.postMessage("abort")}},d)},supported:!1,version:{full:"1.0.0",major:1,minor:0,dot:0}};f.mitm="https://jimmywarting.github.io/StreamSaver.js/mitm.html?version="+f.version.full;
try{f.supported=!!new ReadableStream}catch(h){}return f});